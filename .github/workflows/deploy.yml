name: Deploy iGEM Media Gallery to GitHub Pages

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      artifact_id: ${{ steps.upload_artifact.outputs.artifact_id }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run media rename script
        run: |
          if [ -f rename_media.py ]; then
            echo "Running media rename script..."
            python rename_media.py <<< "2"
          else
            echo "No rename_media.py found, skipping rename step"
          fi

      - name: Build website
        run: |
          echo "Building website with build_site.py..."
          python build_site.py

      - name: Create index.html redirect
        run: |
          cat > index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <meta http-equiv="refresh" content="0; url=gallery.html">
              <title>SYPHU-CHINA iGEM Media Gallery</title>
              <style>/* ...omitted for brevity... */</style>
              <script>setTimeout(function(){window.location.href="gallery.html";},2000);</script>
          </head>
          <body>
              <div>正在跳转到媒体库... 如果没有跳转，请 <a href="gallery.html">点击这里</a></div>
          </body>
          </html>
          EOF
          echo "Created index.html redirect file"

      - name: Prepare list of files (debug)
        run: |
          echo "---- Files in workspace ----"
          ls -la
          echo "---- Files in build output (expected) ----"
          # 假设 build_site.py 输出到 ./site 或 ./build（下面 upload 步骤要与此一致）
          if [ -d site ]; then ls -la site || true; fi
          if [ -d build ]; then ls -la build || true; fi
          if [ -f gallery.html ]; then ls -la gallery.html || true; fi

      - name: Upload static site as Pages artifact
        id: upload_artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # **将此处改为你的构建输出目录**。示例里用 `site`，如果你的脚本输出到仓库根目录或 `./`，也可改成 '.'（不推荐）。
          path: site

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
