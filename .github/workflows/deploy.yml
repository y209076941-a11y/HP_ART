name: Deploy iGEM Media Gallery to GitHub Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-inprogress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Run rename script
        run: |
          echo "Running rename script..."
          if [ -f rename.py ]; then
            python rename.py <<< $'2\ny'
          else
            echo "rename.py not found, skipping"
          fi

      - name: Build website
        run: |
          echo "Building website with build_site.py..."
          python build_site.py

      - name: Verify build output
        run: |
          echo "=== Build Verification ==="
          ls -la
          echo "--- Key Files Check ---"
          [ -f gallery.html ] && echo "✅ gallery.html exists" || echo "❌ gallery.html missing"
          [ -f gallery-style.css ] && echo "✅ gallery-style.css exists" || echo "❌ gallery-style.css missing"
          [ -d ART ] && echo "✅ ART directory exists ($(find ART -type f | wc -l) files)" || echo "❌ ART directory missing"
          [ -d HP ] && echo "✅ HP directory exists ($(find HP -type f | wc -l) files)" || echo "❌ HP directory missing"

      - name: Create index.html redirect
        run: |
          cat > index.html << 'EOF'
<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="refresh" content="0; url=gallery.html">
    <title>SYPHU-CHINA iGEM Media Gallery</title>
    <style>
        body { 
            font-family: Arial, sans-serif; 
            display: flex; 
            align-items: center; 
            justify-content: center; 
            height: 100vh; 
            margin: 0; 
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%); 
        }
        .card { 
            background: #fff; 
            padding: 2rem; 
            border-radius: 10px; 
            box-shadow: 0 6px 18px rgba(0,0,0,.08); 
            text-align: center; 
            max-width: 400px;
        }
        .spinner { 
            border: 4px solid #f3f3f3; 
            border-top: 4px solid #3498db; 
            border-radius: 50%; 
            width: 36px; 
            height: 36px; 
            animation: spin 1.5s linear infinite; 
            margin: 0 auto 1rem; 
        }
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        h2 { color: #2c3e50; margin-bottom: 1rem; }
        p { color: #7f8c8d; margin-bottom: 0.5rem; }
        a { color: #3498db; text-decoration: none; }
        a:hover { text-decoration: underline; }
    </style>
    <script>
        setTimeout(function() {
            window.location.href = "gallery.html";
        }, 2000);
    </script>
</head>
<body>
    <div class="card">
        <div class="spinner"></div>
        <h2>SYPHU-CHINA iGEM Media Gallery</h2>
        <p>正在跳转到媒体库...</p>
        <p>如果没有自动跳转，请 <a href="gallery.html">点击这里</a></p>
    </div>
</body>
</html>
EOF

      - name: Prepare site directory
        run: |
          # 创建 site 目录并复制所有必要文件
          mkdir -p _site
          cp gallery.html _site/
          cp index.html _site/
          cp gallery-style.css _site/
          [ -d ART ] && cp -r ART _site/ || echo "ART directory not found"
          [ -d HP ] && cp -r HP _site/ || echo "HP directory not found"
          
          echo "=== Site Directory Contents ==="
          ls -la _site/

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
